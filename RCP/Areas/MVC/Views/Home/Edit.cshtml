@model HRRcp.Areas.MVC.Models.obdSzablon

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/MVC/Views/Shared/_Layout.cshtml";
}
<script>tinymce.init(
          {
              selector: 'textarea',
              body_class: 'editor-content',
              height: 500,
              width: 'auto',
              language: 'pl',
              content_css: "../Portal/Styles/editor.css",
              plugins: [
                'advlist autolink lists link image charmap print preview anchor',
                'searchreplace visualblocks code',
                'insertdatetime media table contextmenu paste code emoticons textcolor colorpicker'
              ],
              paste_data_images: true,
              convert_urls: false,
              toolbar: 'insertfile undo redo | fontselect fontsizeselect forecolor backcolor | paste | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | imgupload',
              setup: function (editor) {

                  editor.on('init', function (editor) {
                      editor.target.editorCommands.execCommand("fontName", false, "sans-serif");
                      editor.target.editorCommands.execCommand("fontSize", false, "14px");
                  });
                  //alert(0);
                  editor.addButton('imgupload', {

                      text: 'Dodaj zdjęcie',
                      icon: false,
                      onclick: function () {
                          $('#uploader').trigger('click');
                          $("#uploader").on("change", function () {
                              var that = $(this);
                              var file = that.prop('files')[0];

                              var reader = new FileReader();

                              reader.addEventListener("load", function () {
                                  var base64 = reader.result;
                                  editor.insertContent("<img src='" + base64 + "' />");
                              }, false);

                              if (file) {
                                  var data = reader.readAsDataURL(file);
                              }
                          });
                      }
                  });
              }
          });</script>
<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>obdSzablon</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <div class="input-field col s6">
            @Html.LabelFor(model => model.IdObieguDict, htmlAttributes: new { @class = "" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.IdObieguDict, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.IdObieguDict, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-field col s6">
            @Html.LabelFor(model => model.Nazwa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nazwa, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Nazwa, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="input-field col s6">
            @Html.LabelFor(model => model.Opis, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Opis, new { htmlAttributes = new { @class = "validate" } })
                @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.TextArea("contentHTML", (string)Model.ContentHTML, new { @class = "editor tinymce-editor", col = "15", @name = "contentHTML" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ListaSzablonow")
</div>
